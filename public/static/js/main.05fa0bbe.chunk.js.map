{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","hooks/useForm.js","helpers/fetch.js","actions/auth.js","components/auth/LoginScreen.js","helpers/prepareEvents.js","actions/events.js","components/ui/NavBar.js","helpers/calendar-messages.js","components/calendario/CalendarEvent.js","actions/ui.js","components/calendario/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendario/CalendarioScreen.js","route/PublicRouter.js","route/PrivateRouter.js","route/AppRoute.js","Calendario.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","login","user","checkingFinish","logout","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","console","log","startRegister","prepareEvents","end","moment","toDate","start","eventLoaded","addNewEvent","event","eventClearActiveNote","eventUpdated","eventDeleted","NavBar","useSelector","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","getState","evento","_id","startAddNewEvent","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarioScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","color","onDoubleClickEvent","onSelectEvent","view","onView","onSelectSlot","selectable","components","PublicRouter","isAuthenticated","Component","component","rest","props","to","PrivateRouter","AppRoute","exact","path","Calendario","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05fa0bbe.chunk.js","sourcesContent":["export const types = {\r\n    uiOpenModal : '[ui] Open Modal',\r\n    uiCloseModal : '[ui] Close Modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout:'[event] EventLogout',\r\n    eventStartAddnew: '[event] Start add new event',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveNote: '[event] Clear active note',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event Deleted',\r\n    eventLoaded:'[event] EventLoaded', \r\n\r\n    authCheking: '[auth] Checking login state',\r\n    authChekingFinish: '[auth] Finish cheking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n}","import { types } from '../types/types';\r\n\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return{\r\n                ...state, \r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n} ","\r\nimport { types } from '../types/types';\r\n\r\n/* {\r\n    _id: new Date().getTime(),\r\n    title:'Cumpleaños',\r\n    start: moment().toDate(),\r\n    end: moment().add(2, 'hours').toDate(),\r\n    bgColor: '#fafafa',\r\n    notes:'Comprar asdd',\r\n    user:{\r\n        _id:'123',\r\n        name: 'Mariano'\r\n    }   \r\n}, */\r\n\r\nconst initialState ={\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.eventSetActive:\r\n            return{\r\n                ...state, \r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state, \r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.eventClearActiveNote:\r\n            return{\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventUpdated:{\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => e.id === action.payload.id ? action.payload : e\r\n                )\r\n            }\r\n        }\r\n\r\n        case types.eventDeleted:{\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    (e => e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            }\r\n        }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n        case types.eventLogout:\r\n            return {\r\n                ...state, \r\n                events: [],\r\n                activeEvent: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    checking: true,\r\n   /*  uid: null,\r\n    name: null */\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n   \r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n\r\n        case types.authChekingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport { combineReducers } from 'redux';\r\nimport { uiReducer } from './uiReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { authReducer } from './authReducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import{ createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer, \r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchSinToken = (endpoint, data , method ='GET') => {\r\n    \r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if(method === 'GET'){\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nconst fetchConToken = (endpoint, data , method ='GET') => {\r\n    \r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if(method === 'GET'){\r\n        return fetch( url, {\r\n            method, \r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        } );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import { fetchSinToken, fetchConToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n    return  async (dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth', {email, password}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            \r\n            dispatch(login({\r\n                uid: body.id,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nconst login = user => ({\r\n    type:types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return  async (dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth/new', {email, password, name}, 'POST');\r\n        const body = await resp.json();     \r\n        console.log(body);\r\n\r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            \r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    \r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();     \r\n     \r\n\r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            \r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authChekingFinish\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return  async (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(logout())\r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport './login.css';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'marianojoaquinc@gmail.com',\r\n        lPassword: '123456'\r\n    })\r\n    \r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        name:'nano',\r\n        rEmail: 'nano@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    })\r\n\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const { name, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = e => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword));\r\n   \r\n    }\r\n\r\n    const handleRegister = e => {\r\n        e.preventDefault();\r\n        if(rPassword1 !== rPassword2){\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error');\r\n        }\r\n\r\n        dispatch(startRegister(rEmail, rPassword1, name))\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit = { handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name =\"lEmail\"\r\n                                value = { lEmail }\r\n                                onChange ={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name =\"lPassword\"\r\n                                value = { lPassword }\r\n                                onChange ={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit = { handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name = \"name\"\r\n                                value = { name }\r\n                                onChange= { handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name= \"rEmail\"\r\n                                value = { rEmail } \r\n                                onChange = {  handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value= { rPassword1 }\r\n                                onChange = {  handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value = { rPassword2 }\r\n                                onChange = {  handleRegisterInputChange }\r\n\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import moment from 'moment';\r\n\r\n\r\nexport const prepareEvents = (events = [] ) => {\r\n    return events.map(\r\n        e => ({\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate(),\r\n\r\n        })\r\n    )\r\n}","import { types } from \"../types/types\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nexport const startAddNewEvent = (event) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n        \r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ){\r\n\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid, \r\n                    name: name\r\n                }\r\n                console.log(event);\r\n\r\n                dispatch(addNewEvent(event));\r\n                \r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n        \r\n    \r\n    }\r\n}\r\n\r\nexport const startEventsLoading = () => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n            \r\n            const events = prepareEvents(body.eventos);\r\n            dispatch(eventLoaded( events) );\r\n            \r\n        } catch (error) {\r\n            \r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventLoaded = events => ({\r\n        type: types.eventLoaded,\r\n        payload: events\r\n})\r\n\r\nconst addNewEvent = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n})\r\n\r\nexport const setActive = (event) => ({\r\n    type : types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActiveNote = () => ({\r\n    type: types.eventClearActiveNote\r\n})\r\n\r\nexport const startEventUpdate = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ){\r\n                dispatch( eventUpdated( event ));\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) =>( {\r\n    type: types.eventUpdated,\r\n    payload: event\r\n})\r\n\r\n\r\nexport const eventStartDelete = () => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { id } = getState().calendar.activeEvent;\r\n        \r\n        try {\r\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ){\r\n                dispatch( eventDeleted());\r\n                console.log('hola');\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n})\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { eventLogout } from '../../actions/events';\r\n\r\nexport const NavBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n   \r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n        dispatch(eventLogout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb4\">\r\n            <span className=\"navbar-brand\">\r\n              { name }\r\n            </span>\r\n\r\n            <button className=\"btn btn-outline-danger\"\r\n                    onClick = { handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"><span> Salir </span></i>\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n\r\n    const {title, user} = event;\r\n\r\n    return (\r\n        <div>\r\n            <span>{title}</span>\r\n            <strong>-{user.name}-</strong>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from '../types/types';\r\n\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n})","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\n\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveNote, startAddNewEvent, startEventUpdate } from '../../actions/events';\r\n \r\nconst customStyles = {\r\n  content : {\r\n    top                   : '50%',\r\n    left                  : '50%',\r\n    right                 : 'auto',\r\n    bottom                : 'auto',\r\n    marginRight           : '-50%',\r\n    transform             : 'translate(-50%, -50%)'\r\n  }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n    \r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n    const [titleValid, setTitleValid] = useState(true); \r\n\r\n    const [formValues, setFormValues] = useState(initEvent)\r\n\r\n    const {notes, title, start, end} = formValues;\r\n\r\n    useEffect(() => {\r\n        \r\n        if(activeEvent){\r\n            setFormValues(activeEvent);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent])\r\n\r\n    const handleInputChange = e => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n         dispatch(uiCloseModal());\r\n         dispatch(eventClearActiveNote());\r\n         setFormValues(initEvent);\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e); \r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n        console.log(e);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        const momentStart = moment ( start );\r\n        const momentEnd = moment( end );\r\n\r\n        if( momentStart.isSameOrAfter( momentEnd ) ) {\r\n            Swal.fire('Error', 'La fecha de fin debe ser mayor a la fecha de inicio', 'error');\r\n            return;\r\n        }\r\n\r\n        if( title.trim() === ''){\r\n            setTitleValid(false);\r\n            return;\r\n        }\r\n\r\n        //To do: Realizar grabacion en base de datos\r\n        if( activeEvent ){\r\n            dispatch(startEventUpdate(formValues));\r\n        } else {\r\n            dispatch(startAddNewEvent(formValues));\r\n    \r\n        }\r\n        \r\n        setTitleValid(true);\r\n        closeModal();\r\n    }   \r\n\r\n    return (\r\n        <Modal\r\n        isOpen={ modalOpen }\r\n        //onAfterOpen={afterOpenModal}\r\n        \r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        closeTimeoutMS = {200}\r\n        className=\"modal\"\r\n        overlayClassName = \"modal-fondo\"\r\n      >\r\n          <h1>{ activeEvent ? ('Editar evento') : ('Nuevo evento')} </h1>\r\n          <hr />\r\n            <form \r\n            onSubmit = { handleSubmit }\r\n            className=\"container\">\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDateChange }\r\n                        value={dateEnd}\r\n                        minDate= { dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control  ${ !titleValid && 'is-invalid' } `}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange = { handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        onChange = { handleInputChange }\r\n                        value = { notes }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span>{activeEvent ? ('Actualizar') : ('Guardar')}</span>\r\n                </button>\r\n\r\n            </form>\r\n      </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleOpenModel = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick = { handleOpenModel }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick = { handleDelete }\r\n        >   \r\n        <i className=\"fas fa-trash\"></i>\r\n        <span> Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport moment from 'moment'\r\nimport 'moment/locale/es';\r\nimport { NavBar } from '../ui/NavBar'\r\nimport { messages } from '../../helpers/calendar-messages';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { setActive, eventClearActiveNote, startEventsLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\n\r\nconst localizer = momentLocalizer(moment)\r\n\r\nexport const CalendarioScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { events } = useSelector (state => state.calendar)\r\n    const { activeEvent } = useSelector (state => state.calendar);\r\n    \r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month'); \r\n\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(startEventsLoading());\r\n    }, [dispatch])\r\n    \r\n\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n        \r\n    };\r\n\r\n    const onSelectEvent = (e) => {\r\n\r\n        dispatch(setActive(e));\r\n        \r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    };\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        \r\n        const style = {\r\n            backgroundColor:(uid === event.user._id) ? '#367cf7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 'block',\r\n            color: 'white',\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    const onSelectedSlot = (e) => {\r\n        dispatch(eventClearActiveNote());\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <NavBar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages= { messages }\r\n                eventPropGetter= { eventStyleGetter }\r\n                onDoubleClickEvent = { onDoubleClick }\r\n                onSelectEvent = { onSelectEvent }\r\n                view = { lastView }\r\n                onView = { onViewChange }\r\n                onSelectSlot = {onSelectedSlot}\r\n                selectable = { true } \r\n                components ={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n            {(activeEvent) && <DeleteEventFab />}\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nexport const PublicRouter = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n       <Route { ...rest }\r\n            component={ (props) =>(\r\n                ( isAuthenticated )\r\n                ?  ( <Redirect to =\"/\" /> )\r\n                :  ( <Component {...props} /> )\r\n            )}\r\n\r\n        />\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nexport const PrivateRouter = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n    return (\r\n       <Route { ...rest }\r\n            component={ (props) =>(\r\n                ( isAuthenticated )\r\n                ? ( <Component {...props} /> )\r\n                : ( <Redirect to =\"/login\" /> )\r\n            )}\r\n\r\n        />\r\n        \r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarioScreen}  from '../components/calendario/CalendarioScreen';\r\nimport { startChecking } from '../actions/auth';\r\nimport { PublicRouter } from './PublicRouter';\r\nimport { PrivateRouter } from './PrivateRouter';\r\n\r\n\r\n\r\nexport const AppRoute = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n   \r\n\r\n    useEffect(() => {\r\n        dispatch( startChecking());        \r\n    }, [dispatch])\r\n\r\n    if( checking ){\r\n        return <h1>Espere...</h1>\r\n    }\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRouter \r\n                    exact \r\n                    path=\"/login\" \r\n                    component = { LoginScreen } \r\n                    isAuthenticated = { !!uid }\r\n                    />\r\n                    <PrivateRouter \r\n                    exact \r\n                    path=\"/\" \r\n                    component = { CalendarioScreen } \r\n                    isAuthenticated = { !!uid }\r\n                    />\r\n\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport{ Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\nimport { AppRoute } from './route/AppRoute'\r\n\r\nexport const Calendario = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRoute/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nimport './styles.css';\r\nimport { Calendario } from './Calendario';\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <Calendario/>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}